/*
 * This file is generated by jOOQ.
 */
package org.acumen.training.codes.model.tables.records;


import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.OffsetDateTime;

import org.acumen.training.codes.model.tables.DataTypes;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class DataTypesRecord extends TableRecordImpl<DataTypesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.data_types.age</code>.
     */
    public void setAge(Short value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.data_types.age</code>.
     */
    public Short getAge() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>public.data_types.empid</code>.
     */
    public void setEmpid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.data_types.empid</code>.
     */
    public Integer getEmpid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.data_types.popsize</code>.
     */
    public void setPopsize(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.data_types.popsize</code>.
     */
    public Long getPopsize() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.data_types.salary</code>.
     */
    public void setSalary(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.data_types.salary</code>.
     */
    public Double getSalary() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>public.data_types.account_amount</code>.
     */
    public void setAccountAmount(Float value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.data_types.account_amount</code>.
     */
    public Float getAccountAmount() {
        return (Float) get(4);
    }

    /**
     * Setter for <code>public.data_types.donation</code>.
     */
    public void setDonation(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.data_types.donation</code>.
     */
    public BigDecimal getDonation() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>public.data_types.mortage</code>.
     */
    public void setMortage(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.data_types.mortage</code>.
     */
    public BigDecimal getMortage() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>public.data_types.nickname</code>.
     */
    public void setNickname(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.data_types.nickname</code>.
     */
    public String getNickname() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.data_types.position</code>.
     */
    public void setPosition(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.data_types.position</code>.
     */
    public String getPosition() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.data_types.comment</code>.
     */
    public void setComment(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.data_types.comment</code>.
     */
    public String getComment() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.data_types.isemployed</code>.
     */
    public void setIsemployed(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.data_types.isemployed</code>.
     */
    public Boolean getIsemployed() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>public.data_types.timein</code>.
     */
    public void setTimein(LocalTime value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.data_types.timein</code>.
     */
    public LocalTime getTimein() {
        return (LocalTime) get(11);
    }

    /**
     * Setter for <code>public.data_types.birthday</code>.
     */
    public void setBirthday(LocalDate value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.data_types.birthday</code>.
     */
    public LocalDate getBirthday() {
        return (LocalDate) get(12);
    }

    /**
     * Setter for <code>public.data_types.dateresigned</code>.
     */
    public void setDateresigned(LocalDateTime value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.data_types.dateresigned</code>.
     */
    public LocalDateTime getDateresigned() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>public.data_types.moneytxdate</code>.
     */
    public void setMoneytxdate(OffsetDateTime value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.data_types.moneytxdate</code>.
     */
    public OffsetDateTime getMoneytxdate() {
        return (OffsetDateTime) get(14);
    }

    /**
     * Setter for <code>public.data_types.id</code>.
     */
    public void setId(Integer value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.data_types.id</code>.
     */
    public Integer getId() {
        return (Integer) get(15);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setAmount(Object value) {
        set(16, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getAmount() {
        return get(16);
    }

    /**
     * Setter for <code>public.data_types.isturnoff</code>.
     */
    public void setIsturnoff(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>public.data_types.isturnoff</code>.
     */
    public String getIsturnoff() {
        return (String) get(17);
    }

    /**
     * Setter for <code>public.data_types.picture</code>.
     */
    public void setPicture(byte[] value) {
        set(18, value);
    }

    /**
     * Getter for <code>public.data_types.picture</code>.
     */
    public byte[] getPicture() {
        return (byte[]) get(18);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DataTypesRecord
     */
    public DataTypesRecord() {
        super(DataTypes.DATA_TYPES);
    }

    /**
     * Create a detached, initialised DataTypesRecord
     */
    public DataTypesRecord(Short age, Integer empid, Long popsize, Double salary, Float accountAmount, BigDecimal donation, BigDecimal mortage, String nickname, String position, String comment, Boolean isemployed, LocalTime timein, LocalDate birthday, LocalDateTime dateresigned, OffsetDateTime moneytxdate, Integer id, Object amount, String isturnoff, byte[] picture) {
        super(DataTypes.DATA_TYPES);

        setAge(age);
        setEmpid(empid);
        setPopsize(popsize);
        setSalary(salary);
        setAccountAmount(accountAmount);
        setDonation(donation);
        setMortage(mortage);
        setNickname(nickname);
        setPosition(position);
        setComment(comment);
        setIsemployed(isemployed);
        setTimein(timein);
        setBirthday(birthday);
        setDateresigned(dateresigned);
        setMoneytxdate(moneytxdate);
        setId(id);
        setAmount(amount);
        setIsturnoff(isturnoff);
        setPicture(picture);
        resetChangedOnNotNull();
    }
}
