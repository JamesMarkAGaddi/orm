/*
 * This file is generated by jOOQ.
 */
package org.acumen.training.codes.model;


import org.acumen.training.codes.model.tables.Boat;
import org.acumen.training.codes.model.tables.Reservation;
import org.acumen.training.codes.model.tables.Sailor;
import org.acumen.training.codes.model.tables.records.BoatRecord;
import org.acumen.training.codes.model.tables.records.ReservationRecord;
import org.acumen.training.codes.model.tables.records.SailorRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BoatRecord> BOAT_PKEY = Internal.createUniqueKey(Boat.BOAT, DSL.name("boat_pkey"), new TableField[] { Boat.BOAT.ID }, true);
    public static final UniqueKey<ReservationRecord> RESERVATION_PKEY = Internal.createUniqueKey(Reservation.RESERVATION, DSL.name("reservation_pkey"), new TableField[] { Reservation.RESERVATION.RID, Reservation.RESERVATION.SID, Reservation.RESERVATION.BID, Reservation.RESERVATION.DAY }, true);
    public static final UniqueKey<SailorRecord> SAILOR_PKEY = Internal.createUniqueKey(Sailor.SAILOR, DSL.name("sailor_pkey"), new TableField[] { Sailor.SAILOR.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ReservationRecord, BoatRecord> RESERVATION__RESERVATION_BID_FKEY = Internal.createForeignKey(Reservation.RESERVATION, DSL.name("reservation_bid_fkey"), new TableField[] { Reservation.RESERVATION.BID }, Keys.BOAT_PKEY, new TableField[] { Boat.BOAT.ID }, true);
    public static final ForeignKey<ReservationRecord, SailorRecord> RESERVATION__RESERVATION_SID_FKEY = Internal.createForeignKey(Reservation.RESERVATION, DSL.name("reservation_sid_fkey"), new TableField[] { Reservation.RESERVATION.SID }, Keys.SAILOR_PKEY, new TableField[] { Sailor.SAILOR.ID }, true);
}
