/*
 * This file is generated by jOOQ.
 */
package org.acumen.training.codes.model.tables.records;


import java.time.LocalDate;

import org.acumen.training.codes.model.tables.Reservation;
import org.jooq.Record4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ReservationRecord extends UpdatableRecordImpl<ReservationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.reservation.rid</code>.
     */
    public void setRid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.reservation.rid</code>.
     */
    public Integer getRid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.reservation.sid</code>.
     */
    public void setSid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.reservation.sid</code>.
     */
    public Integer getSid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.reservation.bid</code>.
     */
    public void setBid(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.reservation.bid</code>.
     */
    public Integer getBid() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.reservation.day</code>.
     */
    public void setDay(LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.reservation.day</code>.
     */
    public LocalDate getDay() {
        return (LocalDate) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record4<Integer, Integer, Integer, LocalDate> key() {
        return (Record4) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReservationRecord
     */
    public ReservationRecord() {
        super(Reservation.RESERVATION);
    }

    /**
     * Create a detached, initialised ReservationRecord
     */
    public ReservationRecord(Integer rid, Integer sid, Integer bid, LocalDate day) {
        super(Reservation.RESERVATION);

        setRid(rid);
        setSid(sid);
        setBid(bid);
        setDay(day);
        resetChangedOnNotNull();
    }
}
